name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    env:
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
      APPLE_API_KEY_ISSUER: ${{ secrets.APPLE_API_KEY_ISSUER }}
      APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MAC_CERTS_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
      MAC_CERTS: ${{ secrets.MAC_CERTS }}
      SM_API_KEY: ${{ secrets.SM_API_KEY }}
      SM_CODE_SIGNING_CERT_SHA1_HASH: ${{ secrets.SM_CODE_SIGNING_CERT_SHA1_HASH }}
      SM_CLIENT_CERT_FILE_B64: ${{ secrets.SM_CLIENT_CERT_FILE_B64 }}
      SM_CLIENT_CERT_PASSWORD: ${{ secrets.SM_CLIENT_CERT_PASSWORD }}
      SM_HOST: ${{ secrets.SM_HOST }}
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Compile code
        run: npm run compile

      - name: Lint
        run: npm run lint

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v2
        # Only install Snapcraft on Ubuntu
        if: startsWith(matrix.os, 'ubuntu')

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ env.APPLE_API_KEY }}' > ~/private_keys/AuthKey_${{ env.APPLE_API_KEY_ID }}.p8

      - name: Setup Windows Signing Certificate and env variables
        if: startsWith(matrix.os, 'windows')
        run: |
          echo "${{ env.SM_CLIENT_CERT_FILE_B64 }}" | base64 --decode > /d/Certificate_pkcs12.p12
          echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_ENV"
          echo "SM_CLIENT_CERT_FILE=D:\\Certificate_pkcs12.p12" >> "$GITHUB_ENV"
          echo "C:\Program Files (x86)\Windows Kits\10\App Certification Kit" >> $GITHUB_PATH
          echo "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools" >> $GITHUB_PATH
          echo "C:\Program Files\DigiCert\DigiCert Keylocker Tools" >> $GITHUB_PATH
        shell: bash

      - name: Setup Keylocker KSP on windows
        if: startsWith(matrix.os, 'windows')
        run: |
          curl -X GET  https://one.digicert.com/signingmanager/api-ui/v1/releases/Keylockertools-windows-x64.msi/download -H "x-api-key:%SM_API_KEY%" -o Keylockertools-windows-x64.msi
          msiexec /i Keylockertools-windows-x64.msi /quiet /qn
          smksp_registrar.exe list
          smctl.exe keypair ls
          C:\Windows\System32\certutil.exe -csp "DigiCert Signing Manager KSP" -key -user
        shell: cmd

      - name: Certificates Sync
        if: startsWith(matrix.os, 'windows')
        run: |
          smctl windows certsync
        shell: cmd

      - name: Build/release Electron app
        id: build
        uses: samuelmeuli/action-electron-builder@v1
        continue-on-error: true
        with:
          github_token: ${{ env.GITHUB_TOKEN }}

          # Signing certificates
          mac_certs: ${{ env.MAC_CERTS }}
          mac_certs_password: ${{ env.MAC_CERTS_PASSWORD }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: true # ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          # MacOS notarization API key
          APPLE_API_KEY_ID: ${{ env.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER: ${{ env.APPLE_API_KEY_ISSUER }}
          APPLE_API_KEY: ~/private_keys/AuthKey_${{ env.APPLE_API_KEY_ID }}.p8
          SM_CODE_SIGNING_CERT_SHA1_HASH: ${{ env.SM_CODE_SIGNING_CERT_SHA1_HASH }}

      - name: Print notarization error log
        if: startsWith(matrix.os, 'macos') && steps.build.outcome == 'failure'
        run: |
          if [ -f "notarization-error.log" ]; then
            cat notarization-error.log
          fi
          exit 1
